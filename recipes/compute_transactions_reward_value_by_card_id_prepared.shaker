{
  "columnsSelection": {
    "mode": "ALL"
  },
  "explorationSampling": {
    "_refreshTrigger": 0,
    "selection": {
      "filter": {
        "distinct": false,
        "enabled": false
      },
      "latestPartitionsN": 1,
      "maxRecords": 10000,
      "maxRecordsForDisplay": -1,
      "ordering": {
        "rules": [],
        "enabled": false
      },
      "withinFirstN": -1,
      "partitionSelectionMethod": "ALL",
      "maxStoredBytes": 104857600,
      "targetRatio": 0.02,
      "maxReadUncompressedBytes": -1,
      "samplingMethod": "HEAD_SEQUENTIAL",
      "timeout": -1
    },
    "autoRefreshSample": false
  },
  "explorationFilters": [],
  "origin": "PREPARE_RECIPE",
  "exploreUIParams": {
    "autoRefresh": true
  },
  "steps": [
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "comment": "The reward program that has the greatest value to the cardholder.",
      "type": "CreateColumnWithGREL",
      "params": {
        "expression": "if(and(reward_cash_back_sum \u003e\u003d reward_travel_sum, reward_cash_back_sum \u003e\u003d reward_dining_entertainment_sum), \"cash_back\", if(and(reward_dining_entertainment_sum \u003e\u003d reward_cash_back_sum, reward_dining_entertainment_sum \u003e\u003d reward_travel_sum), \"dining_entertainment\", \"travel\"))",
        "column": "best_reward_program"
      },
      "alwaysShowComment": true
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "comment": "The highest reward amount",
      "type": "CreateColumnWithGREL",
      "params": {
        "expression": "cells[\"reward_\" + best_reward_program + \"_sum\"].value",
        "column": "best_reward_amount"
      },
      "alwaysShowComment": true
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "comment": "The reward amount that the cardholder is currently receiving",
      "type": "CreateColumnWithGREL",
      "params": {
        "expression": "cells[\"reward_\" + card_reward_program_first + \"_sum\"].value",
        "column": "current_reward_amount"
      },
      "alwaysShowComment": true
    },
    {
      "preview": false,
      "metaType": "PROCESSOR",
      "disabled": false,
      "comment": "How much the cardholder will gain by switching to the best rewards program",
      "type": "CreateColumnWithGREL",
      "params": {
        "expression": "best_reward_amount - current_reward_amount",
        "column": "value_add"
      },
      "alwaysShowComment": true
    },
    {
      "preview": true,
      "metaType": "PROCESSOR",
      "disabled": false,
      "comment": "To which rewards program the cardholder should switch",
      "type": "CreateColumnWithGREL",
      "params": {
        "expression": "if(value_add\u003e0, concat(card_reward_program_first, \" --\u003e \", best_reward_program), \"no switch\")",
        "column": "switch"
      },
      "alwaysShowComment": false
    }
  ],
  "maxProcessedMemTableBytes": -1,
  "previewMode": "ALL_ROWS",
  "vizSampling": {
    "_refreshTrigger": 0,
    "selection": {
      "useMemTable": false,
      "filter": {
        "distinct": false,
        "enabled": false
      },
      "latestPartitionsN": 1,
      "maxRecords": -1,
      "ordering": {
        "rules": [],
        "enabled": false
      },
      "withinFirstN": -1,
      "partitionSelectionMethod": "ALL",
      "targetRatio": 0.02,
      "maxReadUncompressedBytes": -1,
      "samplingMethod": "FULL"
    },
    "autoRefreshSample": false
  },
  "analysisColumnData": {},
  "columnWidthsByName": {
    "card_fico_score_first": 173,
    "value_add": 113,
    "reward_dining_entertainment_sum": 248,
    "best_reward_amount": 150,
    "best_reward_program": 158,
    "card_reward_program_first": 203,
    "reward_travel_sum": 169,
    "current_reward_amount": 173,
    "purchase_amount_sum": 158,
    "reward_cash_back_sum": 165,
    "card_id": 120,
    "switch": 253
  },
  "sorting": [],
  "globalSearchQuery": "",
  "coloring": {
    "scheme": "MEANING_AND_STATUS",
    "individualColumns": [],
    "valueColoringMode": "HASH"
  }
}