{
  "type": "PostgreSQL",
  "managed": true,
  "shortDesc": "Metrics and checks",
  "checklists": {
    "checklists": []
  },
  "checks": [],
  "customMeta": {
    "kv": {}
  },
  "flowOptions": {
    "virtualizable": false,
    "rebuildBehavior": "WRITE_PROTECT",
    "crossProjectBuildBehavior": "DEFAULT"
  },
  "readWriteOptions": {
    "preserveOrder": false,
    "writeBuckets": 1,
    "forceSingleOutputFile": false,
    "defaultReadOrdering": {
      "enabled": false,
      "rules": []
    }
  },
  "partitioning": {
    "ignoreNonMatchingFile": false,
    "considerMissingRequestedPartitionsAsEmpty": false,
    "dimensions": []
  },
  "versionTag": {
    "versionNumber": 18,
    "lastModifiedBy": {
      "login": "admin"
    },
    "lastModifiedOn": 1654087908175
  },
  "creationTag": {
    "versionNumber": 0,
    "lastModifiedBy": {
      "login": "camillec"
    },
    "lastModifiedOn": 1625039334383
  },
  "tags": [
    "checks",
    "metrics",
    "data preparation"
  ],
  "params": {
    "writeWithCopyBadDataBehavior": "NOVERIFY_ERROR",
    "connection": "postgre-local",
    "notReadyIfEmpty": false,
    "mode": "table",
    "partitioningType": "custom",
    "normalizeDoubles": true,
    "table": "${projectKey}_transactions_joined_prepared",
    "tableCreationMode": "auto",
    "writeInsertBatchSize": 10000,
    "writeJDBCBadDataBehavior": "DISCARD_ROW",
    "readColsWithUnknownTzAsDates": false,
    "readSQLDateColsAsDSSDates": true
  },
  "schema": {
    "columns": [
      {"name":"transaction_id","type":"bigint"},
      {"name":"authorized_flag","type":"bigint"},
      {"name":"purchase_date","type":"string"},
      {"name":"purchase_date_parsed","type":"date"},
      {"name":"purchase_year","type":"bigint"},
      {"name":"purchase_month","type":"bigint"},
      {"name":"purchase_day","type":"bigint"},
      {"name":"purchase_dow","type":"bigint"},
      {"name":"purchase_weekend","type":"bigint"},
      {"name":"purchase_hour","type":"bigint"},
      {"name":"card_id","type":"string"},
      {"name":"merchant_id","type":"string"},
      {"name":"merchant_category_id","type":"bigint"},
      {"name":"item_category","type":"string"},
      {"name":"purchase_amount","type":"double"},
      {"name":"signature_provided","type":"bigint"},
      {"name":"card_first_active_month","type":"string"},
      {"name":"card_first_active_month_parsed","type":"date"},
      {"name":"days_active","type":"bigint"},
      {"name":"card_reward_program","type":"string"},
      {"name":"card_latitude","type":"double"},
      {"name":"card_longitude","type":"double"},
      {"name":"card_fico_score","type":"bigint"},
      {"name":"card_age","type":"bigint"},
      {"name":"merchant_subsector_description","type":"string"},
      {"name":"merchant_latitude","type":"double"},
      {"name":"merchant_longitude","type":"double"},
      {"name":"merchant_location","type":"string"},
      {"name":"merchant_state","type":"string"},
      {"name":"merchant_state_enName","type":"string"},
      {"name":"card_location","type":"string"},
      {"name":"merchant_cardholder_distance","type":"double"},
      {"name":"card_state","type":"string"},
      {"name":"card_state_enName","type":"string"}
    ],
    "userModified": true
  },
  "dkuProperties": [],
  "metrics": {
    "probes": [
      {
        "type": "basic",
        "enabled": true,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Basic data",
          "level": 0
        },
        "configuration": {}
      },
      {
        "type": "records",
        "enabled": true,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Record count",
          "level": 0
        },
        "configuration": {}
      },
      {
        "type": "col_stats",
        "enabled": true,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Columns statistics",
          "level": 2
        },
        "configuration": {
          "aggregates": [
            {
              "column": "merchant_id",
              "aggregated": "COUNT_DISTINCT"
            },
            {
              "column": "purchase_amount",
              "aggregated": "MIN"
            },
            {
              "column": "card_fico_score",
              "aggregated": "MEAN"
            }
          ]
        }
      },
      {
        "type": "adv_col_stats",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Most frequent values",
          "level": 3
        },
        "configuration": {
          "aggregates": [],
          "numberTopValues": 10
        }
      },
      {
        "type": "percentile_stats",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Columns percentiles",
          "level": 4
        },
        "configuration": {
          "aggregates": []
        }
      },
      {
        "type": "verify_col",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Data validity",
          "level": 4
        },
        "configuration": {
          "aggregates": []
        }
      },
      {
        "type": "sql_query",
        "enabled": true,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Nb of unique merchants",
          "level": 9
        },
        "configuration": {
          "code": "select count(distinct \"merchant_id\") as unique_merchants \nfrom ${DKU_DATASET_TABLE_NAME}\n\n",
          "canRunOnImpala": true,
          "singleAggregate": false,
          "perColumn": false,
          "columns": []
        }
      },
      {
        "type": "python",
        "enabled": true,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Max purchase amount in €",
          "level": 8
        },
        "configuration": {
          "code": "def process(dataset, partition_id):\n    df \u003d dataset.get_dataframe()\n    max_purchase_amt \u003d df[\"purchase_amount\"].max()\n    max_purchase_amt_euro \u003d 0.85 * max_purchase_amt\n    return {\"max_purchase_in_euro\": max_purchase_amt_euro}\n",
          "envSelection": {
            "envMode": "INHERIT"
          }
        }
      }
    ],
    "engineConfig": {
      "padRunsWithMetrics": false,
      "hive": {
        "active": true,
        "extraConf": []
      },
      "basic": {},
      "dss": {
        "active": true,
        "selection": {
          "useMemTable": false,
          "filter": {
            "distinct": false,
            "enabled": false
          },
          "partitionSelectionMethod": "ALL",
          "latestPartitionsN": 1,
          "ordering": {
            "enabled": false,
            "rules": []
          },
          "samplingMethod": "FULL",
          "maxRecords": -1,
          "targetRatio": 0.02,
          "withinFirstN": -1,
          "maxReadUncompressedBytes": -1
        }
      },
      "sql": {
        "active": true
      },
      "impala": {
        "active": true
      },
      "spark": {
        "active": true,
        "extraConf": []
      },
      "python": {}
    },
    "displayedState": {
      "partition": "NP",
      "columns": [],
      "metrics": [
        "col_stats:MEAN:card_fico_score",
        "col_stats:MIN:purchase_amount",
        "python:max_purchase_in_euro:Max purchase amount in €",
        "sql_query:unique_merchants:Nb of unique merchants"
      ]
    }
  },
  "metricsChecks": {
    "runOnBuild": false,
    "checks": [
      {
        "metricId": "col_stats:MIN:purchase_amount",
        "minimum": 0.0,
        "maximum": 0.0,
        "softMinimum": 0.0,
        "softMaximum": 0.0,
        "minimumEnabled": true,
        "maximumEnabled": false,
        "softMinimumEnabled": false,
        "softMaximumEnabled": false,
        "type": "numericRange",
        "meta": {
          "name": "Value in range",
          "label": "Purchase amount \u003e\u003d0"
        },
        "computeOnBuildMode": "PARTITION"
      },
      {
        "metricId": "col_stats:MEAN:card_fico_score",
        "minimum": 525.0,
        "maximum": 650.0,
        "softMinimum": 0.0,
        "softMaximum": 0.0,
        "minimumEnabled": true,
        "maximumEnabled": true,
        "softMinimumEnabled": false,
        "softMaximumEnabled": false,
        "type": "numericRange",
        "meta": {
          "name": "Value in range",
          "label": "Avg Fico score range"
        },
        "computeOnBuildMode": "PARTITION"
      },
      {
        "metricId": "python:max_purchase_in_euro:Max purchase amount in €",
        "minimum": 0.0,
        "maximum": 0.0,
        "softMinimum": 0.0,
        "softMaximum": 40000.0,
        "minimumEnabled": false,
        "maximumEnabled": false,
        "softMinimumEnabled": false,
        "softMaximumEnabled": true,
        "type": "numericRange",
        "meta": {
          "name": "Value in range",
          "label": "Max purchase amount \u003e\u003d 40k"
        },
        "computeOnBuildMode": "PARTITION"
      }
    ],
    "displayedState": {
      "partition": "NP",
      "checks": [
        "Avg Fico score range",
        "Max purchase amount \u003e\u003d 40k",
        "Purchase amount \u003e\u003d0"
      ]
    }
  },
  "customFields": {}
}